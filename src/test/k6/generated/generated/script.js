/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.14.0
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "http://localhost:17080";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/gameMainDatar", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameSiteData
        {
            let url = BASE_URL + `/gameMainData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembAccsHHData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembAccsHHData
        {
            let url = BASE_URL + `/sttiMembAccsHHData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/eml/athn/send", () => {

        // Request No. 1: sendEml
        {
            let url = BASE_URL + `/eml/athn/send`;
            // TODO: edit the parameters of the request body.
            let body = {"loginId": "string", "passwd": "string", "passwdInitYn": "string", "athnDtime": "string", "emlAthnHisNo": "long", "membNo": "long", "to": "string", "enctEmlAddr": "string", "maskEmlAddr": "string", "athnPrpsCd": "string", "athnNo": "string", "athnEfctTm": "string", "emlAthnRsltCd": "string", "cntryCd": "string", "crtdDtime": "string", "crtdIp": "string", "crtdMembNo": "long", "crtdPgmId": "string", "updtDtime": "string", "updtIp": "string", "updtMembNo": "long", "updtPgmId": "string", "poRtrnVal": "integer", "poRtrnMsg": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateCommCd", () => {

        // Request No. 1: updateCommCd
        {
            let url = BASE_URL + `/updateCommCd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "systGrpCd": "string", "commCd": "string", "commGrpCd": "string", "originSystGrpCd": "string", "originCommCd": "string", "originCommGrpCd": "string", "commCdKorNm": "string", "commCdEngNm": "string", "commCdDesc": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectCtgrCd", () => {
        let commGrpCd = 'TODO_EDIT_THE_COMMGRPCD'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectCtgrCd
        {
            let url = BASE_URL + `/selectCtgrCd?commGrpCd=${commGrpCd}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membDrmcLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMembDrmcLstData
        {
            let url = BASE_URL + `/membDrmcLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/cupnLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: cupnLstData
        {
            let url = BASE_URL + `/cupnLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertAdmAllwIpAddr", () => {

        // Request No. 1: insertAdmAllwIpAddr
        {
            let url = BASE_URL + `/insertAdmAllwIpAddr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "originMembNo": "long", "loginId": "string", "originGameSvcCd": "string", "ipAddrStrtL": "integer", "originIpAddrStrtL": "string", "ipAddrEndL": "integer", "originIpAddrEndL": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "cntryCd": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "blRegCausCd": "string", "wlRegCausCd": "string", "regCaus": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPmembDDData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPmembDDData
        {
            let url = BASE_URL + `/sttiPmembDDData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameMntn", () => {

        // Request No. 1: insertGameMntn
        {
            let url = BASE_URL + `/insertGameMntn`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "mntnStrtTm": "string", "mntnStopTm": "string", "mntnMsgStrId": "string", "originGameSvcCd": "string", "originMntnStrtTm": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectBlckUUidDtl", () => {

        // Request No. 1: selectUUidDtl_1
        {
            let url = BASE_URL + `/selectBlckUUidDtl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "rowSno": "long", "exclJobId": "string", "exclJobKindCd": "string", "membNo": "long", "loginId": "string", "exclProcDtime": "string", "unblckDtime": "string", "blckKindCd": "string", "blckKindNm": "string", "blckCaus": "string", "unblckCaus": "string", "exclProcSttuCd": "string", "exclProcSttuNm": "string", "exclProcRsltMsg": "string", "exclDataCnt": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameCmnt", () => {

        // Request No. 1: insertGameCmnt
        {
            let url = BASE_URL + `/insertGameCmnt`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "cmntKindCd": "string", "originCmntKindCd": "string", "cmntKindNm": "string", "cmntUrl": "string", "useYn": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/pymtMthdData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pymtMthdMstData
        {
            let url = BASE_URL + `/pymtMthdData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembSttuDD", () => {

        // Request No. 1: reStatisticsMembSttuDD
        {
            let url = BASE_URL + `/reStatisticsMembSttuDD`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPymtMMData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPymtMMData
        {
            let url = BASE_URL + `/sttiPymtMMData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membBlckLstData", () => {
        let baseDate = 'TODO_EDIT_THE_BASEDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMembBlckLstData
        {
            let url = BASE_URL + `/membBlckLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&baseDate=${baseDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameMny", () => {

        // Request No. 1: updateGameMny
        {
            let url = BASE_URL + `/updateGameMny`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "gameMnyCd": "string", "originGameMnyCd": "string", "gameMnyDesc": "string", "gameMnyNmStrId": "string", "useYn": "string", "gameMnyIcoUrl": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateIpAddrBl", () => {

        // Request No. 1: updateIpAddrBl
        {
            let url = BASE_URL + `/updateIpAddrBl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "originMembNo": "long", "loginId": "string", "originGameSvcCd": "string", "ipAddrStrtL": "integer", "originIpAddrStrtL": "string", "ipAddrEndL": "integer", "originIpAddrEndL": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "cntryCd": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "blRegCausCd": "string", "wlRegCausCd": "string", "regCaus": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membMemoHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMemoHisData
        {
            let url = BASE_URL + `/membMemoHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectLoginIdByMembNo", () => {

        // Request No. 1: selectLoginIdByMembNo
        {
            let url = BASE_URL + `/selectLoginIdByMembNo`;
            // TODO: edit the parameters of the request body.
            let body = {"membNo": "long", "loginId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectYmdLst", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectYmdLst
        {
            let url = BASE_URL + `/selectYmdLst?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/udpAdmBlckMemb", () => {

        // Request No. 1: udpAdmBlckMemb
        {
            let url = BASE_URL + `/udpAdmBlckMemb`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertCupn", () => {

        // Request No. 1: insertCupn
        {
            let url = BASE_URL + `/insertCupn`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "cupnGrpCd": "string", "cupnCd": "string", "cupnKindCd": "string", "exppStrtDtime": "string", "exppStopDtime": "string", "itemCd": "string", "itemCnt": "long", "gameMnyCd": "string", "gameMnyAmt": "bigdecimal", "useYn": "string", "loginId": "string", "regCount": "long"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/deleteMenu", () => {

        // Request No. 1: deleteMenu
        {
            let url = BASE_URL + `/deleteMenu`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgmId": "string", "prntPmgId": "string", "dsplyOrdr": "integer", "pgmNm": "string", "pgmLoc": "string", "pgmIco": "string", "useYn": "string", "membNo": "long", "ip": "string", "readAllwYn": "string", "wrtAllwYn": "string", "deleAllwYn": "string", "dwnldAllwYn": "string", "prtAllwYn": "string", "originalPrntPgmId": "string", "originalPgmId": "string", "originalLoc": "string", "admMembNo": "long", "pgmLevel": "integer", "useYnText": "string", "prntPgmId": "string", "subPgmId": "string", "dtime": "string", "fullName": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updatePymtMntn", () => {

        // Request No. 1: updatePymtMntn
        {
            let url = BASE_URL + `/updatePymtMntn`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgCd": "string", "originGameSvcCd": "string", "originPgCd": "string", "pymtMthdCd": "string", "originPymtMthdCd": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "mntnStrId": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateQna", () => {

        // Request No. 1: updateQna
        {
            let url = BASE_URL + `/updateQna`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "qnaSno": "long", "membNo": "long", "membNm": "string", "ctntKindCd": "string", "ctntKindName": "string", "ctntCtgrCd": "string", "ctntCtgrName": "string", "qnaKindCd": "string", "prntQnaSno": "long", "qnaTitl": "string", "qnaCtxt": "string", "qnaRegDtime": "string", "rplYn": "string", "starRtngYn": "string", "starRtng": "long", "feedback": "string", "starRtngCrtdDtime": "string", "atchFlNm": "string", "atchFlsaveNm": "string", "qnaDsplyYn": "string", "dsplyStopDtime": "string", "atchFlDsplyYn": "string", "ansYn": "string", "ansLoginId": "string", "ansUpdtDtime": "string", "brdDtime": "string", "ansRes": "long", "waitRes": "long", "allRes": "long", "rate": "integer", "cntStar": "long", "avgStar": "bigdecimal"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/mntnLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: mntnLstData
        {
            let url = BASE_URL + `/mntnLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPmembMM", () => {

        // Request No. 1: reStatisticsPmembMM
        {
            let url = BASE_URL + `/reStatisticsPmembMM`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameSvcData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let gameSvcCd = 'TODO_EDIT_THE_GAMESVCCD'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameSvcData
        {
            let url = BASE_URL + `/gameSvcData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&gameSvcCd=${gameSvcCd}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertPrdt", () => {

        // Request No. 1: insertPrdt
        {
            let url = BASE_URL + `/insertPrdt`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "langCd": "string", "prdtCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "prdtNm": "string", "prdtDesc": "string", "prdtUntPrc": "bigdecimal", "pchsCrncySign": "string", "pchsCrncyCd": "string", "imgUrl": "string", "pchsLmtCnt": "integer", "prdtKindCd": "string", "paidMny": "long", "freeMny": "long", "itemCd": "string", "trxAllwYn": "string", "subsInTvCd": "string", "autoRnWlYn": "string", "pgSkuInfo": "string", "useYn": "string", "dsplyYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiItemMMData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiItemMMData
        {
            let url = BASE_URL + `/sttiItemMMData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateCtntCtgr", () => {

        // Request No. 1: updateBrdCtgr
        {
            let url = BASE_URL + `/updateCtntCtgr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "ctntKindCd": "string", "originCtntKindCd": "string", "ctntCtgrCd": "string", "originCtntCtgrCd": "string", "ctntCtgrNmStrId": "string", "dsplyYn": "string", "dsplyOrdr": "integer", "useYn": "string", "strId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertFileUpldMst", () => {

        // Request No. 1: insertFileUpldMst
        {
            let url = BASE_URL + `/insertFileUpldMst`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "fileSno": "long", "orgFileNm": "string", "saveFileNm": "string", "fileLoc": "string", "fileBytes": "integer", "fileExt": "string", "fileUrl": "string", "fileMemo": "string", "deleYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectCommGrpCd", () => {

        // Request No. 1: selectCommGrpCd
        {
            let url = BASE_URL + `/selectCommGrpCd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "systGrpCd": "string", "commGrpCd": "string", "commGrpKorNm": "string", "commGrpDesc": "string", "commGrpEngNm": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertI18nRes", () => {

        // Request No. 1: insertI18nRes
        {
            let url = BASE_URL + `/insertI18nRes`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "strId": "string", "originStrId": "string", "langCd": "string", "originLangCd": "string", "strText": "string", "pgmId": "string", "fepSvcKind": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembJoinDD", () => {

        // Request No. 1: reStatisticsMembJoinDD
        {
            let url = BASE_URL + `/reStatisticsMembJoinDD`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPymtHHData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPymtHHData
        {
            let url = BASE_URL + `/sttiPymtHHData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admMembLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectAdmMembDtlLst
        {
            let url = BASE_URL + `/admMembLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsItemDD", () => {

        // Request No. 1: reStatisticsItemDD
        {
            let url = BASE_URL + `/reStatisticsItemDD`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertCommGrpCd", () => {

        // Request No. 1: insertCommGrpCd
        {
            let url = BASE_URL + `/insertCommGrpCd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "systGrpCd": "string", "commGrpCd": "string", "commGrpKorNm": "string", "commGrpDesc": "string", "commGrpEngNm": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateLpop", () => {

        // Request No. 1: updateLpop
        {
            let url = BASE_URL + `/updateLpop`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "seqNo": "long", "lpopSno": "long", "langCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "lpopCtxt": "string", "noDsplyDay": "integer", "btn1StrId": "string", "btn1Url": "string", "btn2StrId": "string", "btn2Url": "string", "loginId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/cntryGeoIpData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: cntryGeoIpData
        {
            let url = BASE_URL + `/cntryGeoIpData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembSttuDDData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembSttuDDData
        {
            let url = BASE_URL + `/sttiMembSttuDDData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/brdData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let ctntKindCd = 'TODO_EDIT_THE_CTNTKINDCD'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ctntData
        {
            let url = BASE_URL + `/brdData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&startDate=${startDate}&endDate=${endDate}&ctntKindCd=${ctntKindCd}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/pgmAthrGrpData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pgmAthrGrpData
        {
            let url = BASE_URL + `/pgmAthrGrpData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembAccsWoy", () => {

        // Request No. 1: reStatisticsMembAccsWoy
        {
            let url = BASE_URL + `/reStatisticsMembAccsWoy`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/proxy/image", () => {
        let url = 'TODO_EDIT_THE_URL'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: getImage
        {
            let url = BASE_URL + `/proxy/image?url=${url}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameSvcCpyr", () => {

        // Request No. 1: insertGameSvcCpyr
        {
            let url = BASE_URL + `/insertGameSvcCpyr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "cpyrKindCd": "string", "cpyrKindNm": "string", "originCpyrKindCd": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPmembWoyData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPmembWoyData
        {
            let url = BASE_URL + `/sttiPmembWoyData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembAccsMMData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembAccsMMData
        {
            let url = BASE_URL + `/sttiMembAccsMMData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertAdmDept", () => {

        // Request No. 1: insertAdmDept
        {
            let url = BASE_URL + `/insertAdmDept`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "deptCd": "string", "originDeptCd": "string", "deptNm": "string", "loginId": "string", "deptHdMembNo": "long", "enctEmlAddr": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameUiData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameUiData
        {
            let url = BASE_URL + `/gameUiData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPymtDD", () => {

        // Request No. 1: reStatisticsPymtDD
        {
            let url = BASE_URL + `/reStatisticsPymtDD`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectUnblckUUidDtl", () => {

        // Request No. 1: selectUnblckUUidDtl
        {
            let url = BASE_URL + `/selectUnblckUUidDtl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "rowSno": "long", "exclJobId": "string", "exclJobKindCd": "string", "membNo": "long", "loginId": "string", "exclProcDtime": "string", "unblckDtime": "string", "blckKindCd": "string", "blckKindNm": "string", "blckCaus": "string", "unblckCaus": "string", "exclProcSttuCd": "string", "exclProcSttuNm": "string", "exclProcRsltMsg": "string", "exclDataCnt": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admLoginHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectLoginHis_5
        {
            let url = BASE_URL + `/admLoginHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPymtWoy", () => {

        // Request No. 1: reStatisticsPymtWoy
        {
            let url = BASE_URL + `/reStatisticsPymtWoy`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGeoCntry", () => {

        // Request No. 1: updateGeoCntry
        {
            let url = BASE_URL + `/updateGeoCntry`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "cntryCd": "string", "originCntryCd": "string", "cntryKorNm": "string", "cntryEngNm": "string", "cntnlEngNm": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admDeptData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: admDeptData
        {
            let url = BASE_URL + `/admDeptData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameUi", () => {

        // Request No. 1: insertGameUi
        {
            let url = BASE_URL + `/insertGameUi`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "langCd": "string", "langNm": "string", "originLangCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "thmCol": "string", "lnchImgUrl": "string", "mainBnrUrl": "string", "thmbUrl": "string", "lblUrl": "string", "updtUrl": "string", "cdnBaseUrl": "string", "lnchScheme": "string", "rcmnBnrUrl": "string", "gameLogoUrl": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameRtngCtgr", () => {

        // Request No. 1: updateGameRtngCtgr
        {
            let url = BASE_URL + `/updateGameRtngCtgr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "gameRtngCtgrCd": "string", "originGameRtngCtgrCd": "string", "gameRtngCtgrNm": "string", "gameRtngCtgrDesc": "string", "imgUrl": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiItemHHData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiItemHHData
        {
            let url = BASE_URL + `/sttiItemHHData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameCmntData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameCmntData
        {
            let url = BASE_URL + `/gameCmntData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameCpyr", () => {

        // Request No. 1: updateGameCpyr
        {
            let url = BASE_URL + `/updateGameCpyr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "cpyrKindCd": "string", "originCpyrKindCd": "string", "cpyrNm": "string", "cpyrShrtNm": "string", "copyrights": "string", "cpyrImgUrl": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameRelData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectGameRelData
        {
            let url = BASE_URL + `/gameRelData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admAccnRqstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: admAccnRqstData
        {
            let url = BASE_URL + `/admAccnRqstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameSvcCpyr", () => {

        // Request No. 1: updateGameSvcCpyr
        {
            let url = BASE_URL + `/updateGameSvcCpyr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "cpyrKindCd": "string", "cpyrKindNm": "string", "originCpyrKindCd": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertIpAddrWl", () => {

        // Request No. 1: insertIpAddrWl
        {
            let url = BASE_URL + `/insertIpAddrWl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "originMembNo": "long", "loginId": "string", "originGameSvcCd": "string", "ipAddrStrtL": "integer", "originIpAddrStrtL": "string", "ipAddrEndL": "integer", "originIpAddrEndL": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "cntryCd": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "blRegCausCd": "string", "wlRegCausCd": "string", "regCaus": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updatePymtMthdMst", () => {

        // Request No. 1: updatePymtMthdMst
        {
            let url = BASE_URL + `/updatePymtMthdMst`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "originPgCd": "string", "originPymtMthdCd": "string", "originAplyStrtDtime": "string", "pgCd": "string", "pymtMthdCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "pymtMthdDesc": "string", "pymtMthdRelInfo": "string", "pymtMthdRelDesc": "string", "pymtMthdIcoUrl": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "integer", "dsplyStrId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/dpstOdrLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectDpstOdrByPage
        {
            let url = BASE_URL + `/dpstOdrLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPmembHH", () => {

        // Request No. 1: reStatisticsPmembHH
        {
            let url = BASE_URL + `/reStatisticsPmembHH`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembJoinMMData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembJoinMMData
        {
            let url = BASE_URL + `/sttiMembJoinMMData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/otpAthnHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectLoginHis_1
        {
            let url = BASE_URL + `/otpAthnHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membLoginHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectLoginHis_2
        {
            let url = BASE_URL + `/membLoginHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembJoinMM", () => {

        // Request No. 1: reStatisticsMembJoinMM
        {
            let url = BASE_URL + `/reStatisticsMembJoinMM`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertMenu", () => {

        // Request No. 1: insertMenu
        {
            let url = BASE_URL + `/insertMenu`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgmId": "string", "prntPmgId": "string", "dsplyOrdr": "integer", "pgmNm": "string", "pgmLoc": "string", "pgmIco": "string", "useYn": "string", "membNo": "long", "ip": "string", "readAllwYn": "string", "wrtAllwYn": "string", "deleAllwYn": "string", "dwnldAllwYn": "string", "prtAllwYn": "string", "originalPrntPgmId": "string", "originalPgmId": "string", "originalLoc": "string", "admMembNo": "long", "pgmLevel": "integer", "useYnText": "string", "prntPgmId": "string", "subPgmId": "string", "dtime": "string", "fullName": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membMktgAgreLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMembMktgAgreLst
        {
            let url = BASE_URL + `/membMktgAgreLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembAccsHH", () => {

        // Request No. 1: reStatisticsMembAccsHH
        {
            let url = BASE_URL + `/reStatisticsMembAccsHH`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectUUidDtl", () => {

        // Request No. 1: selectUUidDtl
        {
            let url = BASE_URL + `/selectUUidDtl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "rowSno": "long", "exclJobId": "string", "exclJobKindCd": "string", "membNo": "long", "loginId": "string", "exclDataCnt": "integer", "chngFreeMnyAmt": "long", "chngCaus": "string", "procSttuCd": "string", "procRsltMsg": "string", "kind": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertAdmAccnRqst", () => {

        // Request No. 1: insertAdmAccnRqst
        {
            let url = BASE_URL + `/insertAdmAccnRqst`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "athnHisNo": "long", "emlAthnRsltCd": "string", "rqstDtime": "string", "admLoginId": "string", "admNm": "string", "deptCd": "string", "deptNm": "string", "rqstCaus": "string", "rqstCd": "string", "emlAddr": "string", "passwd": "string", "enctEmlAddr": "string", "maskEmlAddr": "string", "dueDtime": "string", "procDtime": "string", "procCaus": "string", "accnRqstProcSttuCd": "string", "pgmAthrGrpCd": "string", "admGameSvcGrpCd": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/fileLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: fileLstData
        {
            let url = BASE_URL + `/fileLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/prdtData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: prdtData
        {
            let url = BASE_URL + `/prdtData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameMnyData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameMnyData
        {
            let url = BASE_URL + `/gameMnyData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/acesBlData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: acesBlData
        {
            let url = BASE_URL + `/acesBlData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameSvc", () => {

        // Request No. 1: updateGameSvc
        {
            let url = BASE_URL + `/updateGameSvc`;
            // TODO: edit the parameters of the request body.
            let body = {"piGameSvcCd": "string", "originalGameSvcCd": "string", "piGameNm": "string", "piGameNmKr": "string", "piGameNmEn": "string", "piGamePltf": "string", "piGameUrl": "string", "piGameUrlKr": "string", "piGameUrlEn": "string", "piAgeUse": "string", "piHashTag": "string", "piHashTagKr": "string", "piHashTagEn": "string", "piCsCmpnyNm": "string", "piCsCmpnyNmKr": "string", "piCsCmpnyNmEn": "string", "piCsAddr": "string", "piCsAddrKr": "string", "piCsAddrEn": "string", "piCsEml": "string", "piCsTelNo": "string", "piGameIntrMsg": "string", "piGameIntrMsgKr": "string", "piGameIntrMsgEn": "string", "piScndPasswdUseYn": "string", "piGameTmChseUseYn": "string", "piUseYn": "string", "piDsplyOrdr": "integer", "piRlsDtime": "string", "piGameMnyCd": "string", "piGameBdgeCd": "string", "piRcmnDsplyPct": "bigdecimal", "piClsfDt": "string", "piClsfNo": "string", "piProRprNo": "string", "piDstBsnRprNo": "string", "piGameCrnCyCd": "string", "piMembNo": "long", "piDtime": "string", "piIp": "string", "poRtrnVal": "integer", "poRtrnMsg": "string", "piPgmId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertBanWrd", () => {

        // Request No. 1: insertBanWrd
        {
            let url = BASE_URL + `/insertBanWrd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "banwrdNm": "string", "originBanwrdNm": "string", "loginId": "string", "langCd": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertCtntPstd", () => {

        // Request No. 1: insertCtntPstd
        {
            let url = BASE_URL + `/insertCtntPstd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "ctntSno": "long", "loginId": "string", "ctntKindCd": "string", "ctntCtgrCd": "string", "langCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "titlDsplyOrdr": "integer", "ctntTitl": "string", "ctntCtxt": "string", "ctntImgUrl": "string", "dsplyYn": "string", "topFixdYn": "string", "dsplyStopDtime": "string", "vwrCnt": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/udpAdmInsertBlckExcl", () => {

        // Request No. 1: udpAdmInsertBlckExcl
        {
            let url = BASE_URL + `/udpAdmInsertBlckExcl`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/lpopLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: lpopLstData
        {
            let url = BASE_URL + `/lpopLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/emlAthnHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectLoginHis_4
        {
            let url = BASE_URL + `/emlAthnHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameSvcGrp", () => {

        // Request No. 1: updateGameSvcGrp
        {
            let url = BASE_URL + `/updateGameSvcGrp`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "admGameSvcGrpCd": "string", "originAdmGameSvcGrpCd": "string", "originGameSvcCd": "string", "admGameSvcGrpDesc": "string", "loginId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameRtng", () => {

        // Request No. 1: insertGameRtng
        {
            let url = BASE_URL + `/insertGameRtng`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "gameRtngCtgrCd": "string", "originGameRtngCtgrCd": "string", "gameRtngCtgrNm": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPmembHHData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPmembHHData
        {
            let url = BASE_URL + `/sttiPmembHHData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameApiData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameApiData
        {
            let url = BASE_URL + `/gameApiData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameRtngCtgrData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameRtngCtgrData
        {
            let url = BASE_URL + `/gameRtngCtgrData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameRtngData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameRtngData
        {
            let url = BASE_URL + `/gameRtngData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/ctgrLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ctgrLstData
        {
            let url = BASE_URL + `/ctgrLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/eml/check", () => {
        let loginId = 'TODO_EDIT_THE_LOGINID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: emlDupCheck
        {
            let url = BASE_URL + `/eml/check?loginId=${loginId}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/udpAdmInsertMnyExcl", () => {

        // Request No. 1: udpAdmInsertMnyExc
        {
            let url = BASE_URL + `/udpAdmInsertMnyExcl`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membUnblckSampleExcel", () => {

        // Request No. 1: membUnblckSampleExcel
        {
            let url = BASE_URL + `/membUnblckSampleExcel`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectAdmPgmExctDtl", () => {

        // Request No. 1: selectAdmPgmExctDtl
        {
            let url = BASE_URL + `/selectAdmPgmExctDtl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "pgmId": "string", "loginId": "string", "pgmLoc": "string", "pgmAthrGrpCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "readAllwYn": "string", "wrtAllwYn": "string", "prtAllwYn": "string", "deleAllwYn": "string", "dwnldAllwYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembAccsWoyData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembAccsWoyData
        {
            let url = BASE_URL + `/sttiMembAccsWoyData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPymtHH", () => {

        // Request No. 1: reStatisticsPymtHH
        {
            let url = BASE_URL + `/reStatisticsPymtHH`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admAceslpData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: admAceslpData
        {
            let url = BASE_URL + `/admAceslpData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/api/test", () => {

        // Request No. 1: test2
        {
            let url = BASE_URL + `/api/test`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPymtWoyData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPymtWoyData
        {
            let url = BASE_URL + `/sttiPymtWoyData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/pymtMthdMntnData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: pymtMthdMntnData
        {
            let url = BASE_URL + `/pymtMthdMntnData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiItemDDData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiItemDDData
        {
            let url = BASE_URL + `/sttiItemDDData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameApi", () => {

        // Request No. 1: updateGameApi
        {
            let url = BASE_URL + `/updateGameApi`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "originGameApiKindCd": "string", "originAplyStrtDtime": "string", "gameApiKindCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "gameApiUrl": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameSvcGrpData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: gameSvcGrp
        {
            let url = BASE_URL + `/gameSvcGrpData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admAthrSetGameSvcGrp", () => {
        let value = 'TODO_EDIT_THE_VALUE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: shareData
        {
            let url = BASE_URL + `/admAthrSetGameSvcGrp?value=${value}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/qnaBrdCtgrData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: qnaBrdCtgrData
        {
            let url = BASE_URL + `/qnaBrdCtgrData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/otpSetHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectLoginHis
        {
            let url = BASE_URL + `/otpSetHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admJobBrdData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectAdmJobBrdByPage
        {
            let url = BASE_URL + `/admJobBrdData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPymtDDData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPymtDDData
        {
            let url = BASE_URL + `/sttiPymtDDData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectUnblckUUid", () => {

        // Request No. 1: selectUnblckUUid
        {
            let url = BASE_URL + `/selectUnblckUUid`;
            let request = http.post(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPmembDD", () => {

        // Request No. 1: reStatisticsPmembDD
        {
            let url = BASE_URL + `/reStatisticsPmembDD`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembJoinDDData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembJoinDDData
        {
            let url = BASE_URL + `/sttiMembJoinDDData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateI18nRes", () => {

        // Request No. 1: updateI18nRes
        {
            let url = BASE_URL + `/updateI18nRes`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "strId": "string", "originStrId": "string", "langCd": "string", "originLangCd": "string", "strText": "string", "pgmId": "string", "fepSvcKind": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertPymtMthdMst", () => {

        // Request No. 1: insertPymtMthdMst
        {
            let url = BASE_URL + `/insertPymtMthdMst`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "originPgCd": "string", "originPymtMthdCd": "string", "originAplyStrtDtime": "string", "pgCd": "string", "pymtMthdCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "pymtMthdDesc": "string", "pymtMthdRelInfo": "string", "pymtMthdRelDesc": "string", "pymtMthdIcoUrl": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "integer", "dsplyStrId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertPymtMntn", () => {

        // Request No. 1: insertPymtMntn
        {
            let url = BASE_URL + `/insertPymtMntn`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgCd": "string", "originGameSvcCd": "string", "originPgCd": "string", "pymtMthdCd": "string", "originPymtMthdCd": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "mntnStrId": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiItemWoyData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiItemWoyData
        {
            let url = BASE_URL + `/sttiItemWoyData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updatePgmAthr", () => {

        // Request No. 1: updatePgmAthr
        {
            let url = BASE_URL + `/updatePgmAthr`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameCmnt", () => {

        // Request No. 1: updateGameCmnt
        {
            let url = BASE_URL + `/updateGameCmnt`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "cmntKindCd": "string", "originCmntKindCd": "string", "cmntKindNm": "string", "cmntUrl": "string", "useYn": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membBlckSampleExcel", () => {

        // Request No. 1: membBlckSampleExcel
        {
            let url = BASE_URL + `/membBlckSampleExcel`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateFileUpldMst", () => {

        // Request No. 1: updateFileUpldMst
        {
            let url = BASE_URL + `/updateFileUpldMst`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "fileSno": "long", "orgFileNm": "string", "saveFileNm": "string", "fileLoc": "string", "fileBytes": "integer", "fileExt": "string", "fileUrl": "string", "fileMemo": "string", "deleYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/qnaLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: qnaLstData
        {
            let url = BASE_URL + `/qnaLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertIpAddrBl", () => {

        // Request No. 1: insertIpAddrBl
        {
            let url = BASE_URL + `/insertIpAddrBl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "originMembNo": "long", "loginId": "string", "originGameSvcCd": "string", "ipAddrStrtL": "integer", "originIpAddrStrtL": "string", "ipAddrEndL": "integer", "originIpAddrEndL": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "cntryCd": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "blRegCausCd": "string", "wlRegCausCd": "string", "regCaus": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertCommCd", () => {

        // Request No. 1: insertCommCd
        {
            let url = BASE_URL + `/insertCommCd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "systGrpCd": "string", "commCd": "string", "commGrpCd": "string", "originSystGrpCd": "string", "originCommCd": "string", "originCommGrpCd": "string", "commCdKorNm": "string", "commCdEngNm": "string", "commCdDesc": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembAccsDD", () => {

        // Request No. 1: reStatisticsMembAccsDD
        {
            let url = BASE_URL + `/reStatisticsMembAccsDD`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsItemMM", () => {

        // Request No. 1: reStatisticsItemMM
        {
            let url = BASE_URL + `/reStatisticsItemMM`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/udpAdmInsertUnblckExcl", () => {

        // Request No. 1: udpAdmInsertUnblckExcl
        {
            let url = BASE_URL + `/udpAdmInsertUnblckExcl`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updatePgmAthrGrp", () => {

        // Request No. 1: updatePgmAthrGrp
        {
            let url = BASE_URL + `/updatePgmAthrGrp`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgmAthrGrpCd": "string", "originPgmAthrGrpCd": "string", "pgmAthrGrpNm": "string", "loginId": "string", "pgmAthrGrpDesc": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "string", "pgmNum": "integer", "pgmNm": "string", "readAllwYn": "string", "wrtAllwYn": "string", "deleAllwYn": "string", "prtAllwYn": "string", "dwnldAllwYn": "string", "pgmId": "string", "parentPgmId": "string", "pgmLoc": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembJoinWoyData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembJoinWoyData
        {
            let url = BASE_URL + `/sttiMembJoinWoyData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/udpCmnUpdateMnyNt", () => {

        // Request No. 1: udpCmnUpdateMnyNt
        {
            let url = BASE_URL + `/udpCmnUpdateMnyNt`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/cupnRegHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let cupnCd = 'TODO_EDIT_THE_CUPNCD'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: cupnRegHisData
        {
            let url = BASE_URL + `/cupnRegHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&cupnCd=${cupnCd}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/menuLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMenuLstData
        {
            let url = BASE_URL + `/menuLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/gameClientLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectGameClientLstData
        {
            let url = BASE_URL + `/gameClientLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameMny", () => {

        // Request No. 1: insertGameMny
        {
            let url = BASE_URL + `/insertGameMny`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "gameMnyCd": "string", "originGameMnyCd": "string", "gameMnyDesc": "string", "gameMnyNmStrId": "string", "useYn": "string", "gameMnyIcoUrl": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/banwrdLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: banwrdLstData
        {
            let url = BASE_URL + `/banwrdLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateIpAddrWl", () => {

        // Request No. 1: updateIpAddrWl
        {
            let url = BASE_URL + `/updateIpAddrWl`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "originMembNo": "long", "loginId": "string", "originGameSvcCd": "string", "ipAddrStrtL": "integer", "originIpAddrStrtL": "string", "ipAddrEndL": "integer", "originIpAddrEndL": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "cntryCd": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "blRegCausCd": "string", "wlRegCausCd": "string", "regCaus": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembJoinWoy", () => {

        // Request No. 1: reStatisticsMembJoinWoy
        {
            let url = BASE_URL + `/reStatisticsMembJoinWoy`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiPmembMMData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiPmembMMData
        {
            let url = BASE_URL + `/sttiPmembMMData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateAdmPgmExct", () => {

        // Request No. 1: updateAdmPgmExct
        {
            let url = BASE_URL + `/updateAdmPgmExct`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsItemWoy", () => {

        // Request No. 1: reStatisticsItemWoy
        {
            let url = BASE_URL + `/reStatisticsItemWoy`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateMenu", () => {

        // Request No. 1: updateMenu
        {
            let url = BASE_URL + `/updateMenu`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgmId": "string", "prntPmgId": "string", "dsplyOrdr": "integer", "pgmNm": "string", "pgmLoc": "string", "pgmIco": "string", "useYn": "string", "membNo": "long", "ip": "string", "readAllwYn": "string", "wrtAllwYn": "string", "deleAllwYn": "string", "dwnldAllwYn": "string", "prtAllwYn": "string", "originalPrntPgmId": "string", "originalPgmId": "string", "originalLoc": "string", "admMembNo": "long", "pgmLevel": "integer", "useYnText": "string", "prntPgmId": "string", "subPgmId": "string", "dtime": "string", "fullName": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membMnyLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMnyLstData
        {
            let url = BASE_URL + `/membMnyLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameMntn", () => {

        // Request No. 1: updateGameMntn
        {
            let url = BASE_URL + `/updateGameMntn`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "mntnStrtTm": "string", "mntnStopTm": "string", "mntnMsgStrId": "string", "originGameSvcCd": "string", "originMntnStrtTm": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameRtngCtgr", () => {

        // Request No. 1: insertGameRtngCtgr
        {
            let url = BASE_URL + `/insertGameRtngCtgr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "gameRtngCtgrCd": "string", "originGameRtngCtgrCd": "string", "gameRtngCtgrNm": "string", "gameRtngCtgrDesc": "string", "imgUrl": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectUUid", () => {

        // Request No. 1: selectUUid
        {
            let url = BASE_URL + `/selectUUid`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "rowSno": "long", "exclJobId": "string", "exclJobKindCd": "string", "membNo": "long", "loginId": "string", "exclDataCnt": "integer", "chngFreeMnyAmt": "long", "chngCaus": "string", "procSttuCd": "string", "procRsltMsg": "string", "kind": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/qnaBrdData", () => {
        let starRtng = 'TODO_EDIT_THE_STARRTNG'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: qnaBrdData
        {
            let url = BASE_URL + `/qnaBrdData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&startDate=${startDate}&endDate=${endDate}&starRtng=${starRtng}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembAccsDDData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembAccsDDData
        {
            let url = BASE_URL + `/sttiMembAccsDDData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admAthrData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: admAthrData
        {
            let url = BASE_URL + `/admAthrData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameSite", () => {

        // Request No. 1: updateGameSite
        {
            let url = BASE_URL + `/updateGameSite`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "gameHdrDsplyYn": "string", "pnotDsplyYn": "string", "updtDsplyYn": "string", "evntDsplyYn": "string", "dvlNtsDsplyYn": "string", "gameGuideDsplyYn": "string", "prbbDsplyYn": "string", "dwnldDsplyYn": "string", "lnchDsplyYn": "string", "gameVdDsplyYn": "string", "cmntDsplyYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameUi", () => {

        // Request No. 1: updateGameUi
        {
            let url = BASE_URL + `/updateGameUi`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "langCd": "string", "langNm": "string", "originLangCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "thmCol": "string", "lnchImgUrl": "string", "mainBnrUrl": "string", "thmbUrl": "string", "lblUrl": "string", "updtUrl": "string", "cdnBaseUrl": "string", "lnchScheme": "string", "rcmnBnrUrl": "string", "gameLogoUrl": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGeoCntry", () => {

        // Request No. 1: insertGeoCntry
        {
            let url = BASE_URL + `/insertGeoCntry`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "cntryCd": "string", "originCntryCd": "string", "cntryKorNm": "string", "cntryEngNm": "string", "cntnlEngNm": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/cpyrLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: cpyrLstData
        {
            let url = BASE_URL + `/cpyrLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/cntryCdLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: cntryCdLstData
        {
            let url = BASE_URL + `/cntryCdLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameCpyr", () => {

        // Request No. 1: insertGameCpyr
        {
            let url = BASE_URL + `/insertGameCpyr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "cpyrKindCd": "string", "originCpyrKindCd": "string", "cpyrNm": "string", "cpyrShrtNm": "string", "copyrights": "string", "cpyrImgUrl": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertQna", () => {

        // Request No. 1: insertQna
        {
            let url = BASE_URL + `/insertQna`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "qnaSno": "long", "membNo": "long", "membNm": "string", "ctntKindCd": "string", "ctntKindName": "string", "ctntCtgrCd": "string", "ctntCtgrName": "string", "qnaKindCd": "string", "prntQnaSno": "long", "qnaTitl": "string", "qnaCtxt": "string", "qnaRegDtime": "string", "rplYn": "string", "starRtngYn": "string", "starRtng": "long", "feedback": "string", "starRtngCrtdDtime": "string", "atchFlNm": "string", "atchFlsaveNm": "string", "qnaDsplyYn": "string", "dsplyStopDtime": "string", "atchFlDsplyYn": "string", "ansYn": "string", "ansLoginId": "string", "ansUpdtDtime": "string", "brdDtime": "string", "ansRes": "long", "waitRes": "long", "allRes": "long", "rate": "integer", "cntStar": "long", "avgStar": "bigdecimal"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGeoIp", () => {

        // Request No. 1: insertGeoIp
        {
            let url = BASE_URL + `/insertGeoIp`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "netmaskS": "string", "cidr": "string", "cntryCd": "string", "cntnlEngNm": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameApi", () => {

        // Request No. 1: insertGameApi
        {
            let url = BASE_URL + `/insertGameApi`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "originGameApiKindCd": "string", "originAplyStrtDtime": "string", "gameApiKindCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "gameApiUrl": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGeoIp", () => {

        // Request No. 1: updateGeoIp
        {
            let url = BASE_URL + `/updateGeoIp`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "netmaskS": "string", "cidr": "string", "cntryCd": "string", "cntnlEngNm": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/eml/passwd/send", () => {

        // Request No. 1: sendPasswdEml
        {
            let url = BASE_URL + `/eml/passwd/send`;
            // TODO: edit the parameters of the request body.
            let body = {"loginId": "string", "passwd": "string", "passwdInitYn": "string", "athnDtime": "string", "emlAthnHisNo": "long", "membNo": "long", "to": "string", "enctEmlAddr": "string", "maskEmlAddr": "string", "athnPrpsCd": "string", "athnNo": "string", "athnEfctTm": "string", "emlAthnRsltCd": "string", "cntryCd": "string", "crtdDtime": "string", "crtdIp": "string", "crtdMembNo": "long", "crtdPgmId": "string", "updtDtime": "string", "updtIp": "string", "updtMembNo": "long", "updtPgmId": "string", "poRtrnVal": "integer", "poRtrnMsg": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/eml/athn/check", () => {

        // Request No. 1: sendEml_1
        {
            let url = BASE_URL + `/eml/athn/check`;
            // TODO: edit the parameters of the request body.
            let body = {"loginId": "string", "passwd": "string", "passwdInitYn": "string", "athnDtime": "string", "emlAthnHisNo": "long", "membNo": "long", "to": "string", "enctEmlAddr": "string", "maskEmlAddr": "string", "athnPrpsCd": "string", "athnNo": "string", "athnEfctTm": "string", "emlAthnRsltCd": "string", "cntryCd": "string", "crtdDtime": "string", "crtdIp": "string", "crtdMembNo": "long", "crtdPgmId": "string", "updtDtime": "string", "updtIp": "string", "updtMembNo": "long", "updtPgmId": "string", "poRtrnVal": "integer", "poRtrnMsg": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembAccsMM", () => {

        // Request No. 1: reStatisticsMembAccsMM
        {
            let url = BASE_URL + `/reStatisticsMembAccsMM`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateAdmAllwIpAddr", () => {

        // Request No. 1: updateAdmAllwIpAddr
        {
            let url = BASE_URL + `/updateAdmAllwIpAddr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "membNo": "long", "originMembNo": "long", "loginId": "string", "originGameSvcCd": "string", "ipAddrStrtL": "integer", "originIpAddrStrtL": "string", "ipAddrEndL": "integer", "originIpAddrEndL": "string", "aplyStrtDtime": "string", "originAplyStrtDtime": "string", "aplyStopDtime": "string", "cntryCd": "string", "ipAddrStrtS": "string", "ipAddrEndS": "string", "blRegCausCd": "string", "wlRegCausCd": "string", "regCaus": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertLpop", () => {

        // Request No. 1: insertLpop
        {
            let url = BASE_URL + `/insertLpop`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "seqNo": "long", "lpopSno": "long", "langCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "lpopCtxt": "string", "noDsplyDay": "integer", "btn1StrId": "string", "btn1Url": "string", "btn2StrId": "string", "btn2Url": "string", "loginId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectBlckUUid", () => {

        // Request No. 1: selectBlckUUid
        {
            let url = BASE_URL + `/selectBlckUUid`;
            let request = http.post(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/itemOdrLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectItemOdrByPage
        {
            let url = BASE_URL + `/itemOdrLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/selectCtntCtgrCd", () => {

        // Request No. 1: selectCtntCtgrCd
        {
            let url = BASE_URL + `/selectCtntCtgrCd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "ctntKindCd": "string", "originCtntKindCd": "string", "ctntCtgrCd": "string", "originCtntCtgrCd": "string", "ctntCtgrNmStrId": "string", "dsplyYn": "string", "dsplyOrdr": "integer", "useYn": "string", "strId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/ftp/upload", () => {
        let remoteDirectory = 'TODO_EDIT_THE_REMOTEDIRECTORY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let kind = 'TODO_EDIT_THE_KIND'; // specify value as there is no example value for this parameter in OpenAPI spec
        let seq = 'TODO_EDIT_THE_SEQ'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: ftpUpload
        {
            let url = BASE_URL + `/ftp/upload?remoteDirectory=${remoteDirectory}&kind=${kind}&seq=${seq}`;
            // TODO: edit the parameters of the request body.
            let body = {"file": http.file(open("/path/to/file.bin", "b"), "test.bin")};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertPgmAthrGrp", () => {

        // Request No. 1: insertPgmAthrGrp
        {
            let url = BASE_URL + `/insertPgmAthrGrp`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "pgmAthrGrpCd": "string", "originPgmAthrGrpCd": "string", "pgmAthrGrpNm": "string", "loginId": "string", "pgmAthrGrpDesc": "string", "useYn": "string", "dsplyYn": "string", "dsplyOrdr": "string", "pgmNum": "integer", "pgmNm": "string", "readAllwYn": "string", "wrtAllwYn": "string", "deleAllwYn": "string", "prtAllwYn": "string", "dwnldAllwYn": "string", "pgmId": "string", "parentPgmId": "string", "pgmLoc": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateAdmDept", () => {

        // Request No. 1: updateAdmDept
        {
            let url = BASE_URL + `/updateAdmDept`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "deptCd": "string", "originDeptCd": "string", "deptNm": "string", "loginId": "string", "deptHdMembNo": "long", "enctEmlAddr": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/sttiMembJoinHHData", () => {
        let startDateTime = 'TODO_EDIT_THE_STARTDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDateTime = 'TODO_EDIT_THE_ENDDATETIME'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: sttiMembJoinHHData
        {
            let url = BASE_URL + `/sttiMembJoinHHData?startDateTime=${startDateTime}&endDateTime=${endDateTime}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updatePrdt", () => {

        // Request No. 1: updatePrdt
        {
            let url = BASE_URL + `/updatePrdt`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "langCd": "string", "prdtCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "prdtNm": "string", "prdtDesc": "string", "prdtUntPrc": "bigdecimal", "pchsCrncySign": "string", "pchsCrncyCd": "string", "imgUrl": "string", "pchsLmtCnt": "integer", "prdtKindCd": "string", "paidMny": "long", "freeMny": "long", "itemCd": "string", "trxAllwYn": "string", "subsInTvCd": "string", "autoRnWlYn": "string", "pgSkuInfo": "string", "useYn": "string", "dsplyYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/langLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: langLstData
        {
            let url = BASE_URL + `/langLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertCtntCtgr", () => {

        // Request No. 1: insertCtntCtgr
        {
            let url = BASE_URL + `/insertCtntCtgr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "ctntKindCd": "string", "originCtntKindCd": "string", "ctntCtgrCd": "string", "originCtntCtgrCd": "string", "ctntCtgrNmStrId": "string", "dsplyYn": "string", "dsplyOrdr": "integer", "useYn": "string", "strId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateBanWrd", () => {

        // Request No. 1: updateBanWrd
        {
            let url = BASE_URL + `/updateBanWrd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "banwrdNm": "string", "originBanwrdNm": "string", "loginId": "string", "langCd": "string", "useYn": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/admJobHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectAdmJobHisByPage
        {
            let url = BASE_URL + `/admJobHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/api/saf", () => {

        // Request No. 1: test
        {
            let url = BASE_URL + `/api/saf`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "id": "long", "gameApiSafSno": "long", "gameApiKindCd": "string", "membNo": "long", "gameFrwdYn": "string", "gameFrwdRsltCd": "string", "gameFrwdRsltMsg": "string", "gameFrwdTryCnt": "string", "result": "string", "gameApiUrl": "string", "rqstJson": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertAdmGameSvcGrp", () => {

        // Request No. 1: insertAdmGameSvcGrp
        {
            let url = BASE_URL + `/insertAdmGameSvcGrp`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "admGameSvcGrpCd": "string", "originAdmGameSvcGrpCd": "string", "originGameSvcCd": "string", "admGameSvcGrpDesc": "string", "loginId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPmembWoy", () => {

        // Request No. 1: reStatisticsPmembWoy
        {
            let url = BASE_URL + `/reStatisticsPmembWoy`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateAdmAccnRqst", () => {

        // Request No. 1: updateAdmAccnRqst
        {
            let url = BASE_URL + `/updateAdmAccnRqst`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "athnHisNo": "long", "emlAthnRsltCd": "string", "rqstDtime": "string", "admLoginId": "string", "admNm": "string", "deptCd": "string", "deptNm": "string", "rqstCaus": "string", "rqstCd": "string", "emlAddr": "string", "passwd": "string", "enctEmlAddr": "string", "maskEmlAddr": "string", "dueDtime": "string", "procDtime": "string", "procCaus": "string", "accnRqstProcSttuCd": "string", "pgmAthrGrpCd": "string", "admGameSvcGrpCd": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/insertGameSvc", () => {

        // Request No. 1: insertGameSvc
        {
            let url = BASE_URL + `/insertGameSvc`;
            // TODO: edit the parameters of the request body.
            let body = {"piGameSvcCd": "string", "originalGameSvcCd": "string", "piGameNm": "string", "piGameNmKr": "string", "piGameNmEn": "string", "piGamePltf": "string", "piGameUrl": "string", "piGameUrlKr": "string", "piGameUrlEn": "string", "piAgeUse": "string", "piHashTag": "string", "piHashTagKr": "string", "piHashTagEn": "string", "piCsCmpnyNm": "string", "piCsCmpnyNmKr": "string", "piCsCmpnyNmEn": "string", "piCsAddr": "string", "piCsAddrKr": "string", "piCsAddrEn": "string", "piCsEml": "string", "piCsTelNo": "string", "piGameIntrMsg": "string", "piGameIntrMsgKr": "string", "piGameIntrMsgEn": "string", "piScndPasswdUseYn": "string", "piGameTmChseUseYn": "string", "piUseYn": "string", "piDsplyOrdr": "integer", "piRlsDtime": "string", "piGameMnyCd": "string", "piGameBdgeCd": "string", "piRcmnDsplyPct": "bigdecimal", "piClsfDt": "string", "piClsfNo": "string", "piProRprNo": "string", "piDstBsnRprNo": "string", "piGameCrnCyCd": "string", "piMembNo": "long", "piDtime": "string", "piIp": "string", "poRtrnVal": "integer", "poRtrnMsg": "string", "piPgmId": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/cpyrSvcLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: cpyrSvcLstData
        {
            let url = BASE_URL + `/cpyrSvcLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateGameRtng", () => {

        // Request No. 1: updateGameRtng
        {
            let url = BASE_URL + `/updateGameRtng`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "originGameSvcCd": "string", "gameRtngCtgrCd": "string", "originGameRtngCtgrCd": "string", "gameRtngCtgrNm": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsMembJoinHH", () => {

        // Request No. 1: reStatisticsMembJoinHH
        {
            let url = BASE_URL + `/reStatisticsMembJoinHH`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsPymtMM", () => {

        // Request No. 1: reStatisticsPymtMM
        {
            let url = BASE_URL + `/reStatisticsPymtMM`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/reStatisticsItemHH", () => {

        // Request No. 1: reStatisticsItemHH
        {
            let url = BASE_URL + `/reStatisticsItemHH`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "sttiyyyymmddhh": "string", "sttiyyyymmdd": "string", "sttiyyyymm": "string", "sttiyyyy": "string", "sttiWoy": "string", "gndrKindCd": "string", "itemAttrCd": "string", "sttiSttuCd": "string", "acmlMembCnt": "long", "age07undrMembCnt": "long", "age13undrMembCnt": "long", "age16undrMembCnt": "long", "age19undrMembCnt": "long", "age20sMembCnt": "long", "age30sMembCnt": "long", "age40sMembCnt": "long", "age50sMembCnt": "long", "age60overMembCnt": "long", "psumCnt": "long", "psumAmt": "bigdecimal", "pmembCnt": "long", "rsumCnt": "long", "rsumAmt": "bigdecimal", "rmembCnt": "long", "pymtSumCnt": "long", "pymtSumAmt": "bigdecimal", "puCnt": "long", "feeAmt": "bigdecimal", "cnclSumCnt": "long", "cnclSumAmt": "bigdecimal", "cnclMembCnt": "long", "pymtMthdCd": "string", "sttiTermStrtHH": "string", "sttiTermStopHH": "string", "sttiTermStrtDt": "string", "sttiTermStopDt": "string", "inputDate": "string", "inputWoy": "integer", "result": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateAdmAthr", () => {

        // Request No. 1: updateAdmAthr
        {
            let url = BASE_URL + `/updateAdmAthr`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "admMembNo": "long", "loginId": "string", "updtId": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "pgmAthrGrpCd": "string", "admGameSvcGrpCd": "string"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/udpAdmUnblckMemb", () => {

        // Request No. 1: udpAdmUnblckMemb
        {
            let url = BASE_URL + `/udpAdmUnblckMemb`;
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/updateCtntPstd", () => {

        // Request No. 1: updateCtntPstd
        {
            let url = BASE_URL + `/updateCtntPstd`;
            // TODO: edit the parameters of the request body.
            let body = {"rowNo": "integer", "poRtrnVal": "integer", "poRtrnMsg": "string", "crtdIp": "string", "crtdDtime": "string", "crtdMembNo": "long", "crtdPgmid": "string", "updtIp": "string", "updtDtime": "string", "updtMembNo": "long", "updtPgmid": "string", "gameSvcCd": "string", "gameSvcNm": "string", "updtLoginId": "string", "ctntSno": "long", "loginId": "string", "ctntKindCd": "string", "ctntCtgrCd": "string", "langCd": "string", "aplyStrtDtime": "string", "aplyStopDtime": "string", "titlDsplyOrdr": "integer", "ctntTitl": "string", "ctntCtxt": "string", "ctntImgUrl": "string", "dsplyYn": "string", "topFixdYn": "string", "dsplyStopDtime": "string", "vwrCnt": "integer"};
            let params = {
                headers: {
                    "Content-Type": "application/json", "Accept": "*/*"
                }
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membMnyLstDtlData/{membNo}", () => {
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let membNo = 'TODO_EDIT_THE_MEMBNO'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMnyLstDtlData
        {
            let url = BASE_URL + `/membMnyLstDtlData/${membNo}?draw=${draw}&start=${start}&length=${length}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/acesWlData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: acesWLData
        {
            let url = BASE_URL + `/acesWlData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/mktgAgreHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMembMktgHis
        {
            let url = BASE_URL + `/mktgAgreHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/commCdLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: commCdLstData
        {
            let url = BASE_URL + `/commCdLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/mbpAthnHisData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectLoginHis_3
        {
            let url = BASE_URL + `/mbpAthnHisData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/membLstData", () => {
        let searchField1 = 'TODO_EDIT_THE_SEARCHFIELD1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue1 = 'TODO_EDIT_THE_SEARCHVALUE1'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue2 = 'TODO_EDIT_THE_SEARCHVALUE2'; // specify value as there is no example value for this parameter in OpenAPI spec
        let endDate = 'TODO_EDIT_THE_ENDDATE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue3 = 'TODO_EDIT_THE_SEARCHVALUE3'; // specify value as there is no example value for this parameter in OpenAPI spec
        let searchValue4 = 'TODO_EDIT_THE_SEARCHVALUE4'; // specify value as there is no example value for this parameter in OpenAPI spec
        let start = 'TODO_EDIT_THE_START'; // specify value as there is no example value for this parameter in OpenAPI spec
        let length = 'TODO_EDIT_THE_LENGTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let draw = 'TODO_EDIT_THE_DRAW'; // specify value as there is no example value for this parameter in OpenAPI spec
        let startDate = 'TODO_EDIT_THE_STARTDATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1: selectMembLstData
        {
            let url = BASE_URL + `/membLstData?draw=${draw}&start=${start}&length=${length}&searchField1=${searchField1}&searchValue1=${searchValue1}&searchValue2=${searchValue2}&searchValue3=${searchValue3}&searchValue4=${searchValue4}&startDate=${startDate}&endDate=${endDate}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

}
